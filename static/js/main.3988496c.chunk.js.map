{"version":3,"sources":["redux/reducers/chart.reducer.ts","redux/reducers/nation.reducer.ts","redux/reducers/country.reducer.ts","redux/reducers/index.ts","redux/reducers/countries.reducer.ts","redux/reducers/statisticsPeriod.reducer.ts","redux/store/store.ts","components/Cards.tsx","redux/actions/chart.action.ts","components/Chart.tsx","components/Header.tsx","services/server.ts","services/countryServices.ts","redux/actions/countries.action.ts","redux/actions/country.action.ts","components/Sidebar.tsx","redux/actions/statisticsPeriod.action.ts","components/Statusbar.tsx","services/nationServices.ts","redux/actions/nation.action.ts","App.tsx","index.tsx"],"names":["countryInit","name","pv","uv","amt","nationInit","cases","deaths","recovered","detailCases","detailDeaths","detailRecovered","id","abbreviation","cases1w","cases2w","cases3w","cases4w","reducers","combineReducers","countries","state","action","type","payload","country","nation","statisticsPeriod","chart","store","createStore","compose","applyMiddleware","reduxThunk","Cards","nationInfo","useSelector","countryInfo","period","className","value","displayType","thousandSeparator","deaths1w","deaths2w","deaths3w","deaths4w","recovered1w","recovered2w","recovered3w","recovered4w","drawChart","states","dispatch","a","createChart","chartBuild","start","slice","length","map","item","index","week1Info","Moment","date","format","count","push","Chart","chartData","useDispatch","useEffect","style","width","height","ResponsiveContainer","LineChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","XAxis","dataKey","interval","angle","textAnchor","YAxis","Legend","wrapperStyle","verticalAlign","iconType","Tooltip","Line","stroke","fill","Header","server","axios","create","baseURL","headers","fetchCountriesCasesInfoByDays","days","url","get","fetchCountriesRecoverdInfoByDays","fetchCountriesDeathsInfoByDays","setCountries","result","resCases","Object","values","totalCases1week","totalCases2week","totalCases3week","totalCases4week","casesDetail","history","currentValue","detail","newItem","resDeaths","totalDeaths1week","totalDeaths2week","totalDeaths3week","totalDeaths4week","deathsDetail","countryIndex","findIndex","i","resRecovered","totalRecovered1week","totalRecovered2week","totalRecovered3week","totalRecovered4week","recoveredDetail","getCountry","statesInfo","stateSelected","filter","emptyCountry","Sidebar","useState","activeMenu","setActiveMenu","toast","error","onClick","key","countryID","getStatisticsPeriod","periodType","Statusbar","handleClickDropdown","text","fetchNationCasesInfoByDays","fetchNationRecoverdInfoByDays","fetchNationDeathsInfoByDays","setNation","App","ReactDOM","render","StrictMode","position","autoClose","hideProgressBar","transition","Flip","document","getElementById"],"mappings":"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","file":"static/js/main.3988496c.chunk.js","sourcesContent":["import { IChart } from './../../models/country.model';\r\nimport { ActionChart } from './../actions/actionTypes';\r\n\r\nconst countryInit: IChart = {\r\n\tname: '',\r\n\tpv: 0,\r\n\tuv: 0,\r\n\tamt: 0,\r\n};\r\n\r\nexport const chartReducer = (\r\n\tstate: IChart = countryInit,\r\n\taction: ActionChart\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'DRAW':\r\n\t\t\treturn [...action.payload];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { INation } from '../../models/country.model';\r\nimport { ActionNation } from '../actions/actionTypes';\r\n\r\n// const nationInit = {\r\n// \tcases: '',\r\n// \tdeaths: '',\r\n// \trecovered: '',\r\n// \tweekIncidence: '',\r\n// \tcasesPer100k: '',\r\n// \tcasesPerWeek: '',\r\n// \tdelta: {\r\n// \t\tcases: '',\r\n// \t\tdeaths: '',\r\n// \t\trecovered: '',\r\n// \t},\r\n// \tr: {\r\n// \t\tvalue: '',\r\n// \t\trValue4Days: {\r\n// \t\t\tvalue: '',\r\n// \t\t\tdate: '',\r\n// \t\t},\r\n// \t\trValue7Days: {\r\n// \t\t\tvalue: '',\r\n// \t\t\tdate: '',\r\n// \t\t},\r\n// \t\tlastUpdate: '',\r\n// \t},\r\n// };\r\n\r\nconst nationInit = {\r\n\tcases: 0,\r\n\tdeaths: 0,\r\n\trecovered: 0,\r\n\tdetailCases: [],\r\n\tdetailDeaths: [],\r\n\tdetailRecovered: [],\r\n};\r\n\r\nexport const nationReducer = (\r\n\tstate: INation = nationInit,\r\n\taction: ActionNation\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'GET': {\r\n\t\t\treturn action.payload;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { ActionStateEmpty } from './../actions/actionTypes';\r\nimport { IStates } from '../../models/country.model';\r\nimport { ActionState } from '../actions/actionTypes';\r\n\r\nconst countryInit: IStates = {\r\n\tid: '',\r\n\tname: '',\r\n\tabbreviation: '',\r\n\tcases: 0,\r\n\tdeaths: 0,\r\n\trecovered: 0,\r\n\tcases1w: 0,\r\n\tcases2w: 0,\r\n\tcases3w: 0,\r\n\tcases4w: 0,\r\n\tdetailCases: [],\r\n\tdetailDeaths: [],\r\n\tdetailRecovered: [],\r\n};\r\n\r\nexport const countryReducer = (\r\n\tstate: IStates = countryInit,\r\n\taction: ActionState | ActionStateEmpty\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOAD':\r\n\t\t\treturn action.payload;\r\n\t\tcase 'EMPTY':\r\n\t\t\treturn countryInit;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { chartReducer } from './chart.reducer';\r\nimport { statisticsPeriodReducer } from './statisticsPeriod.reducer';\r\nimport { nationReducer } from './nation.reducer';\r\nimport { combineReducers } from 'redux';\r\nimport { countryReducer } from './country.reducer';\r\nimport { countriesReducer } from './countries.reducer';\r\n\r\nexport const reducers = combineReducers({\r\n\tcountries: countriesReducer,\r\n\tcountry: countryReducer,\r\n\tnation: nationReducer,\r\n\tstatisticsPeriod: statisticsPeriodReducer,\r\n\tchart: chartReducer,\r\n});\r\n","import { IStates } from '../../models/country.model';\r\nimport { ActionStates } from '../actions/actionTypes';\r\n\r\nexport const countriesReducer = (\r\n\tstate: IStates[] = [],\r\n\taction: ActionStates\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'INIT': {\r\n\t\t\treturn [...action.payload];\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { IStates } from '../../models/country.model';\r\nimport { ActionstatisticsPeriod } from '../actions/actionTypes';\r\n\r\nexport const statisticsPeriodReducer = (\r\n\tstate: IStates[] = [],\r\n\taction: ActionstatisticsPeriod\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'PERIOD': {\r\n\t\t\treturn action.payload;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { reducers } from '../reducers/index';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(reduxThunk)));\r\n\r\nexport type RootStore = ReturnType<typeof reducers>;\r\n\r\nexport default store;\r\n","import { useSelector } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { RootStore } from '../redux/store/store';\r\n\r\nconst Cards: React.FC = () => {\r\n\tconst nationInfo = useSelector((store: RootStore) => store.nation);\r\n\tconst countryInfo = useSelector((store: RootStore) => store.country);\r\n\tconst period = useSelector((store: RootStore) => store.statisticsPeriod);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"row row-cols-1 row-cols-md-3 g-4 ms-5 me-3\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"card text-dark bg-light h-90 rounded-top shadow-sm\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"card-icon\">\r\n\t\t\t\t\t\t\t\t<h6 className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-cog fa-spin fa-1x fa-fw card-icon-color-cases\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\tCASES\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<h5 className=\"card-title px-4\">\r\n\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\tcountryInfo.name\r\n\t\t\t\t\t\t\t\t\t\t\t? period === '1 week ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.cases1w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '2 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.cases2w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '3 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.cases3w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '4 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.cases4w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '1 week ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.cases1w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '2 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.cases2w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '3 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.cases3w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '4 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.cases4w\r\n\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"card text-dark bg-light h-100  shadow-sm\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"card-icon\">\r\n\t\t\t\t\t\t\t\t<h6 className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-cog fa-spin fa-1x fa-fw card-icon-color-deaths\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\tDEATHS\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<h5 className=\"card-title px-4\">\r\n\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\tcountryInfo.name\r\n\t\t\t\t\t\t\t\t\t\t\t? period === '1 week ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.deaths1w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '2 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.deaths2w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '3 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.deaths3w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '4 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.deaths4w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '1 week ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.deaths1w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '2 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.deaths2w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '3 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.deaths3w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '4 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.deaths4w\r\n\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"card text-dark bg-light h-100  shadow-sm\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"card-icon\">\r\n\t\t\t\t\t\t\t\t<h6 className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-cog fa-spin fa-1x fa-fw card-icon-color-recovered\"\r\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\tRECOVERED\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<h5 className=\"card-title px-4\">\r\n\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\tcountryInfo.name\r\n\t\t\t\t\t\t\t\t\t\t\t? period === '1 week ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.recovered1w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '2 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.recovered2w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '3 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.recovered3w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: period === '4 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? countryInfo.recovered4w\r\n\t\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '1 week ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.recovered1w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '2 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.recovered2w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '3 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.recovered3w\r\n\t\t\t\t\t\t\t\t\t\t\t: period === '4 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t\t? nationInfo.recovered4w\r\n\t\t\t\t\t\t\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import Moment from 'moment';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n\tIStates,\r\n\tINation,\r\n\tIChart,\r\n\tIHistory,\r\n} from './../../models/country.model';\r\nimport { ActionChart } from './actionTypes';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Make chart object\r\n//params: states: countries/nation info | period: period of info\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const drawChart = (states: IStates | INation, period: string) => {\r\n\treturn async (dispatch: Dispatch<ActionChart>) => {\r\n\t\tconst chartBuild = await createChart(states, period);\r\n\r\n\t\tawait dispatch({ type: 'DRAW', payload: chartBuild });\r\n\t};\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Make chart object in a period\r\n//params: states: countries/nation info | period: period of info\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const createChart = (states: IStates | INation, period: string) => {\r\n\tconst chartBuild: IChart[] = [];\r\n\r\n\tlet start: number = 0;\r\n\tswitch (period) {\r\n\t\tcase '1 week ago':\r\n\t\t\tstart = 21;\r\n\t\t\tbreak;\r\n\t\tcase '2 weeks ago':\r\n\t\t\tstart = 14;\r\n\t\t\tbreak;\r\n\t\tcase '3 weeks ago':\r\n\t\t\tstart = 7;\r\n\t\t\tbreak;\r\n\t\tcase '4 weeks ago':\r\n\t\t\tstart = 0;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tstates.detailCases\r\n\t\t?.slice(start, states.detailCases.length)\r\n\t\t.map((item: IHistory, index: number) => {\r\n\t\t\tlet week1Info: any = {};\r\n\t\t\tweek1Info.name = Moment(item.date).format('L');\r\n\t\t\tweek1Info.uv = item.count;\r\n\r\n\t\t\tconst deaths: IHistory = states.detailDeaths[index];\r\n\t\t\tweek1Info.pv = deaths.count;\r\n\r\n\t\t\tconst recovered: IHistory = states.detailRecovered[index];\r\n\t\t\tweek1Info.amt = recovered.count;\r\n\t\t\tchartBuild.push(week1Info);\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\treturn chartBuild;\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n\tLineChart,\r\n\tLine,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n\tResponsiveContainer,\r\n} from 'recharts';\r\n\r\nimport { RootStore } from '../redux/store/store';\r\nimport { drawChart } from '../redux/actions/chart.action';\r\n\r\nconst Chart: React.FC = () => {\r\n\tconst chartData = useSelector((store: RootStore) => store.chart);\r\n\tconst nationInfo = useSelector((store: RootStore) => store.nation);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t//Get 4 weeks ago nation chart object\r\n\t\tdispatch(drawChart(nationInfo, '4 weeks ago'));\r\n\t}, [nationInfo, dispatch]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ width: '100%', height: 370 }}>\r\n\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\tdata={chartData}\r\n\t\t\t\t\t\tmargin={{\r\n\t\t\t\t\t\t\ttop: 40,\r\n\t\t\t\t\t\t\tright: 30,\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\tbottom: 60,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n\t\t\t\t\t\t<XAxis dataKey=\"name\" interval={0} angle={-75} textAnchor=\"end\" />\r\n\t\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t\t<Legend\r\n\t\t\t\t\t\t\twrapperStyle={{ bottom: 0 }}\r\n\t\t\t\t\t\t\tverticalAlign=\"bottom\"\r\n\t\t\t\t\t\t\ticonType=\"line\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\tname=\"Cases\"\r\n\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\tdataKey=\"uv\"\r\n\t\t\t\t\t\t\tstroke=\"#ed8f04\"\r\n\t\t\t\t\t\t\tfill=\"#ed8f04\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\tname=\"Deaths\"\r\n\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\tdataKey=\"pv\"\r\n\t\t\t\t\t\t\tstroke=\"#f70a44\"\r\n\t\t\t\t\t\t\tfill=\"#f70a44\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\tname=\"Recovered\"\r\n\t\t\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\t\t\tdataKey=\"amt\"\r\n\t\t\t\t\t\t\tstroke=\"#4bbe25\"\r\n\t\t\t\t\t\t\tfill=\"#4bbe25\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","const Header: React.FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\r\n\t\t\t\t<h4 className=\"navbar-brand col-md-4 col-lg-2 me-0 px-3\">\r\n\t\t\t\t\tGermany Covid\r\n\t\t\t\t\t<span className=\"brand-img\">{'\\u00A0'}</span>\r\n\t\t\t\t\tmeter\r\n\t\t\t\t</h4>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"navbar-toggler position-absolute d-md-none collapsed\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdata-bs-toggle=\"collapse\"\r\n\t\t\t\t\tdata-bs-target=\"#sidebarMenu\"\r\n\t\t\t\t\taria-controls=\"sidebarMenu\"\r\n\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\n//* Server configs\r\n//API for fetching Germany Covid-19 statistics via https://api.corona-zahlen.org/docs/\r\nexport const server = axios.create({\r\n\tbaseURL: 'https://api.corona-zahlen.org/',\r\n\theaders: {\r\n\t\t'Content-Type': 'application/json',\r\n\t},\r\n});\r\n","import { server } from './server';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get countries of a nation cases info by day\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const fetchCountriesCasesInfoByDays = (days: number) => {\r\n\tconst url = `states/history/cases/${days}`;\r\n\r\n\treturn server.get(url);\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get countries of a nation recovered info by day\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const fetchCountriesRecoverdInfoByDays = (days: number) => {\r\n\tconst url = `states/history/recovered/${days}`;\r\n\r\n\treturn server.get(url);\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get countries of a nation deaths info by day\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const fetchCountriesDeathsInfoByDays = (days: number) => {\r\n\tconst url = `states/history/deaths/${days}`;\r\n\r\n\treturn server.get(url);\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport { toast } from 'react-toastify';\r\nimport { IHistory, IStates } from './../../models/country.model';\r\nimport {\r\n\tfetchCountriesCasesInfoByDays,\r\n\tfetchCountriesDeathsInfoByDays,\r\n\tfetchCountriesRecoverdInfoByDays,\r\n} from '../../services/countryServices';\r\nimport { ActionStates } from './actionTypes';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get countries of a nation(Germany) info include cases, deaths, and recovered\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const getCountries = (days: number) => {\r\n\treturn async (dispatch: Dispatch<ActionStates>) => {\r\n\t\ttry {\r\n\t\t\t//Get cases, deaths, and recovered via API and make an object\r\n\t\t\tconst result = await setCountries(days);\r\n\r\n\t\t\tawait dispatch({ type: 'INIT', payload: result });\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(\r\n\t\t\t\t'There is a problem on fetching information, please try later.'\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get cases, deaths, and recovered via API cases, recovered, and deaths history API and make an object\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nconst setCountries = async (days: number) => {\r\n\tconst result: IStates[] = [];\r\n\r\n\t//Get countries cases via API\r\n\tconst resCases = await fetchCountriesCasesInfoByDays(28);\r\n\tconst countriesCases: IStates[] = Object.values(resCases.data.data);\r\n\tcountriesCases.map((item) => {\r\n\t\tlet totalCases1week: number = 0;\r\n\t\tlet totalCases2week: number = 0;\r\n\t\tlet totalCases3week: number = 0;\r\n\t\tlet totalCases4week: number = 0;\r\n\r\n\t\t//calculate total of countries cases for 1,2,3,4 weeks\r\n\t\tconst casesDetail: IHistory[] = [];\r\n\t\titem.history.map((currentValue: IStates, index: number) => {\r\n\t\t\tif (index >= 21) totalCases1week += currentValue.cases;\r\n\t\t\tif (index >= 14) totalCases2week += currentValue.cases;\r\n\t\t\tif (index >= 7) totalCases3week += currentValue.cases;\r\n\t\t\ttotalCases4week += currentValue.cases;\r\n\r\n\t\t\t//add cases day by day\r\n\t\t\tconst detail: IHistory = {};\r\n\t\t\tdetail.count = currentValue.cases;\r\n\t\t\tdetail.date = currentValue.date;\r\n\t\t\tcasesDetail.push(detail);\r\n\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t//Init and add cases objects to a single object\r\n\t\tconst newItem = {\r\n\t\t\tid: item.id,\r\n\t\t\tname: item.name,\r\n\t\t\tcases1w: totalCases1week,\r\n\t\t\tcases2w: totalCases2week,\r\n\t\t\tcases3w: totalCases3week,\r\n\t\t\tcases4w: totalCases4week,\r\n\t\t\tdeaths1w: 0,\r\n\t\t\tdeaths2w: 0,\r\n\t\t\tdeaths3w: 0,\r\n\t\t\tdeaths4w: 0,\r\n\t\t\trecovered1w: 0,\r\n\t\t\trecovered2w: 0,\r\n\t\t\trecovered3w: 0,\r\n\t\t\trecovered4w: 0,\r\n\t\t\tcases: 0,\r\n\t\t\tdeaths: 0,\r\n\t\t\trecovered: 0,\r\n\t\t\tdetailCases: casesDetail,\r\n\t\t\tdetailDeaths: [],\r\n\t\t\tdetailRecovered: [],\r\n\t\t};\r\n\r\n\t\tresult.push(newItem);\r\n\r\n\t\treturn true;\r\n\t});\r\n\r\n\t//Get deaths deaths via API\r\n\tconst resDeaths = await fetchCountriesDeathsInfoByDays(days);\r\n\tconst countriesDeaths: IStates[] = Object.values(resDeaths.data.data);\r\n\r\n\tcountriesDeaths.map((item) => {\r\n\t\tlet totalDeaths1week: number = 0;\r\n\t\tlet totalDeaths2week: number = 0;\r\n\t\tlet totalDeaths3week: number = 0;\r\n\t\tlet totalDeaths4week: number = 0;\r\n\r\n\t\t//calculate total of countries deaths for 1,2,3,4 weeks\r\n\t\tconst deathsDetail: IHistory[] = [];\r\n\t\titem.history.map((currentValue: IStates, index: number) => {\r\n\t\t\tif (index >= 21) totalDeaths1week += currentValue.deaths;\r\n\t\t\tif (index >= 14) totalDeaths2week += currentValue.deaths;\r\n\t\t\tif (index >= 7) totalDeaths3week += currentValue.deaths;\r\n\t\t\ttotalDeaths4week += currentValue.deaths;\r\n\r\n\t\t\t//add deaths day by day\r\n\t\t\tconst detail: IHistory = {};\r\n\t\t\tdetail.count = currentValue.deaths;\r\n\t\t\tdetail.date = currentValue.date;\r\n\t\t\tdeathsDetail.push(detail);\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t//add deaths objects to a single object\r\n\t\tconst countryIndex: number = result.findIndex((i) => i.name === item.name);\r\n\t\tconst country = result[countryIndex];\r\n\t\tcountry.deaths1w = totalDeaths1week;\r\n\t\tcountry.deaths2w = totalDeaths2week;\r\n\t\tcountry.deaths3w = totalDeaths3week;\r\n\t\tcountry.deaths4w = totalDeaths4week;\r\n\t\tcountry.detailDeaths = deathsDetail;\r\n\t\tresult[countryIndex] = country;\r\n\r\n\t\treturn true;\r\n\t});\r\n\r\n\t//Get recovered recovered via API\r\n\tconst resRecovered = await fetchCountriesRecoverdInfoByDays(days);\r\n\tconst countriesRecovered: IStates[] = Object.values(resRecovered.data.data);\r\n\tcountriesRecovered.map((item) => {\r\n\t\tlet totalRecovered1week: number = 0;\r\n\t\tlet totalRecovered2week: number = 0;\r\n\t\tlet totalRecovered3week: number = 0;\r\n\t\tlet totalRecovered4week: number = 0;\r\n\r\n\t\t//calculate total of countries recovered for 1,2,3,4 weeks\r\n\t\tconst recoveredDetail: IHistory[] = [];\r\n\t\titem.history.map((currentValue: IStates, index: number) => {\r\n\t\t\tif (index >= 21) totalRecovered1week += currentValue.recovered;\r\n\t\t\tif (index >= 14) totalRecovered2week += currentValue.recovered;\r\n\t\t\tif (index >= 7) totalRecovered3week += currentValue.recovered;\r\n\t\t\ttotalRecovered4week += currentValue.recovered;\r\n\r\n\t\t\t//add recovered day by day\r\n\t\t\tconst detail: IHistory = {};\r\n\t\t\tdetail.count = currentValue.recovered;\r\n\t\t\tdetail.date = currentValue.date;\r\n\t\t\trecoveredDetail.push(detail);\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t//add recovered objects to a single object\r\n\t\tconst countryIndex: number = result.findIndex((i) => i.name === item.name);\r\n\t\tconst country = result[countryIndex];\r\n\t\tcountry.recovered1w = totalRecovered1week;\r\n\t\tcountry.recovered2w = totalRecovered2week;\r\n\t\tcountry.recovered3w = totalRecovered3week;\r\n\t\tcountry.recovered4w = totalRecovered4week;\r\n\t\tcountry.detailRecovered = recoveredDetail;\r\n\t\tresult[countryIndex] = country;\r\n\r\n\t\treturn true;\r\n\t});\r\n\r\n\treturn result;\r\n};\r\n","import { createChart } from './chart.action';\r\nimport { Dispatch } from 'redux';\r\nimport { IStates } from '../../models/country.model';\r\nimport { ActionChart, ActionState, ActionStateEmpty } from './actionTypes';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get a country info include cases, deaths, and recovered, also create chart object\r\n//params: states: countries info | name: supposed country | period: period of info\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const getCountry = (states: IStates[], name: string, period: string) => {\r\n\treturn async (dispatch: Dispatch<ActionState | ActionChart>) => {\r\n\t\tconst statesInfo = [...states];\r\n\t\tconst stateSelected = statesInfo.filter((item) => item.name === name);\r\n\r\n\t\t//Get cases, deaths, and recovered and make an object\r\n\t\tawait dispatch({ type: 'LOAD', payload: stateSelected[0] });\r\n\r\n\t\t//Create chart object\r\n\t\tconst chart = await createChart(stateSelected[0], period);\r\n\t\tawait dispatch({ type: 'DRAW', payload: chart });\r\n\t};\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Clear country object\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const emptyCountry = () => {\r\n\treturn async (dispatch: Dispatch<ActionStateEmpty>) => {\r\n\t\tawait dispatch({ type: 'EMPTY', payload: [] });\r\n\t};\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { drawChart } from '../redux/actions/chart.action';\r\nimport { getCountries } from '../redux/actions/countries.action';\r\nimport { emptyCountry, getCountry } from '../redux/actions/country.action';\r\nimport { RootStore } from '../redux/store/store';\r\n\r\nconst Sidebar: React.FC = () => {\r\n\tconst countries = useSelector((store: RootStore) => store.countries);\r\n\tconst country = useSelector((store: RootStore) => store.country);\r\n\tconst period = useSelector((store: RootStore) => store.statisticsPeriod);\r\n\tconst nationInfo = useSelector((store: RootStore) => store.nation);\r\n\tconst [activeMenu, setActiveMenu] = useState<string>('Germany'); //change color of selected country\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t//Fetch countries info\r\n\t\tdispatch(getCountries(28));\r\n\t}, [dispatch]);\r\n\r\n\t//Click on nation(Germany)\r\n\tconst handleClickNation = () => {\r\n\t\tdispatch(emptyCountry());\r\n\t\tdispatch(drawChart(nationInfo, period));\r\n\t\tsetActiveMenu('Germany');\r\n\t};\r\n\r\n\t//Click on a country\r\n\tconst handleClickCountry = (countryID: string) => {\r\n\t\tdispatch(getCountry(countries, countryID, period));\r\n\t\tdispatch(drawChart(country, period));\r\n\t\tsetActiveMenu(countryID);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav\r\n\t\t\t\tid=\"sidebarMenu\"\r\n\t\t\t\tclassName=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse scrollbar-dusty-grass\"\r\n\t\t\t>\r\n\t\t\t\t<div className=\"position-sticky pt-2\">\r\n\t\t\t\t\t<ul className=\"nav flex-column\">\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey=\"0\"\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tactiveMenu === 'Germany'\r\n\t\t\t\t\t\t\t\t\t? 'nav-item nav-link active '\r\n\t\t\t\t\t\t\t\t\t: 'nav-item nav-link'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={handleClickNation}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\tactiveMenu === 'Germany'\r\n\t\t\t\t\t\t\t\t\t\t? 'fa fa-check feather'\r\n\t\t\t\t\t\t\t\t\t\t: 'fa fa-map-marker feather'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t\tGermany\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t{countries\r\n\t\t\t\t\t\t\t? countries.map((key, index) => (\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tactiveMenu === key.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t? 'nav-item nav-link active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: 'nav-item nav-link'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClickCountry(key.name)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveMenu === key.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'fa fa-check feather'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'fa fa-map-marker feather'\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t\t\t\t\t{key.name}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","///////////////////////////////////////////////////////////////////////////\r\n//Get the period of statistics\r\n//params: periodType: perion(1 week ago, 2 weeks ago, 3 weeks ago, 4 weeks ago)\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const getStatisticsPeriod = (periodType: string) => {\r\n\treturn {\r\n\t\ttype: 'PERIOD',\r\n\t\tpayload: periodType,\r\n\t};\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { drawChart } from '../redux/actions/chart.action';\r\nimport { emptyCountry, getCountry } from '../redux/actions/country.action';\r\nimport { getStatisticsPeriod } from '../redux/actions/statisticsPeriod.action';\r\nimport { RootStore } from '../redux/store/store';\r\n\r\nconst Statusbar: React.FC = () => {\r\n\tconst countries = useSelector((store: RootStore) => store.countries);\r\n\tconst countryInfo = useSelector((store: RootStore) => store.country);\r\n\tconst nationInfo = useSelector((store: RootStore) => store.nation);\r\n\tconst periodType = useSelector((store: RootStore) => store.statisticsPeriod);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\t//Set defaullt 4 weeks ago in first loading\r\n\t\tdispatch(getStatisticsPeriod('4 weeks ago'));\r\n\t}, [dispatch]);\r\n\r\n\t//handle selecting a period depends on nation or country\r\n\tconst handleClickDropdown = (text: string, days: number) => {\r\n\t\t//Set selected period\r\n\t\tdispatch(getStatisticsPeriod(text));\r\n\r\n\t\tif (countryInfo.name) {\r\n\t\t\t//When a country was selected\r\n\t\t\tdispatch(getCountry(countries, countryInfo.name, text));\r\n\t\t} else {\r\n\t\t\t//When nation(Germany) was selected\r\n\t\t\tdispatch(emptyCountry());\r\n\t\t\tdispatch(drawChart(nationInfo, text));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t<h3 className=\"h3\">\r\n\t\t\t\t\t{countryInfo.name ? countryInfo.name : 'Germany'}\r\n\t\t\t\t\t<small className=\"text-muted\"> Daily Trend</small>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<div className=\"btn-toolbar mb-2 mb-md-0\">\r\n\t\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tid=\"dropdownMenuButton2\"\r\n\t\t\t\t\t\t\tdata-bs-toggle=\"dropdown\"\r\n\t\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{periodType}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<ul\r\n\t\t\t\t\t\t\tclassName=\"dropdown-menu dropdown-menu\"\r\n\t\t\t\t\t\t\taria-labelledby=\"dropdownMenuButton2\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\tperiodType === '1 week ago'\r\n\t\t\t\t\t\t\t\t\t\t? 'dropdown-item active'\r\n\t\t\t\t\t\t\t\t\t\t: 'dropdown-item'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => handleClickDropdown('1 week ago', 7)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t1 week ago\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\tperiodType === '2 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t? 'dropdown-item active'\r\n\t\t\t\t\t\t\t\t\t\t: 'dropdown-item'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => handleClickDropdown('2 weeks ago', 14)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t2 weeks ago\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\tperiodType === '3 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t? 'dropdown-item active'\r\n\t\t\t\t\t\t\t\t\t\t: 'dropdown-item'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => handleClickDropdown('3 weeks ago', 21)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t3 weeks ago\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\tperiodType === '4 weeks ago'\r\n\t\t\t\t\t\t\t\t\t\t? 'dropdown-item active'\r\n\t\t\t\t\t\t\t\t\t\t: 'dropdown-item'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => handleClickDropdown('4 weeks ago', 28)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t4 weeks ago\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Statusbar;\r\n","import { server } from './server';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get nation(Germany) cases info by day\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const fetchNationCasesInfoByDays = (days: number) => {\r\n\tconst url = `germany/history/cases/${days}`;\r\n\r\n\treturn server.get(url);\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get nation(Germany) recovered info by day\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const fetchNationRecoverdInfoByDays = (days: number) => {\r\n\tconst url = `germany/history/recovered/${days}`;\r\n\r\n\treturn server.get(url);\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get nation(Germany) deaths info by day\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const fetchNationDeathsInfoByDays = (days: number) => {\r\n\tconst url = `germany/history/deaths/${days}`;\r\n\r\n\treturn server.get(url);\r\n};\r\n","import { IHistory } from './../../models/country.model';\r\nimport { ActionNation } from './actionTypes';\r\nimport {\r\n\tfetchNationCasesInfoByDays,\r\n\tfetchNationDeathsInfoByDays,\r\n\tfetchNationRecoverdInfoByDays,\r\n} from '../../services/nationServices';\r\nimport { Dispatch } from 'redux';\r\nimport { INation } from '../../models/country.model';\r\nimport { toast } from 'react-toastify';\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get nation(Germany) info include cases, deaths, and recovered\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nexport const getNationByDays = (days: number) => {\r\n\treturn async (dispatch: Dispatch<ActionNation>) => {\r\n\t\ttry {\r\n\t\t\t//Get cases, deaths, and recovered via API and make an object\r\n\t\t\tconst result = await setNation(days);\r\n\r\n\t\t\tawait dispatch({ type: 'GET', payload: result });\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(\r\n\t\t\t\t'There is a problem on fetching information, please try later.'\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////\r\n//Get cases, deaths, and recovered via API cases, recovered, and deaths history API and make an object\r\n//params: days: days count\r\n///////////////////////////////////////////////////////////////////////////\r\nconst setNation = async (days: number) => {\r\n\t//Get nation cases via API\r\n\tconst resCases = await fetchNationCasesInfoByDays(days);\r\n\r\n\tlet totalCases1week: number = 0;\r\n\tlet totalCases2week: number = 0;\r\n\tlet totalCases3week: number = 0;\r\n\tlet totalCases4week: number = 0;\r\n\r\n\t//calculate total of cases for 1,2,3,4 weeks\r\n\tconst casesDetail: IHistory[] = [];\r\n\tresCases.data.data.map((currentValue: INation, index: number) => {\r\n\t\tif (index >= 21) totalCases1week += currentValue.cases;\r\n\t\tif (index >= 14) totalCases2week += currentValue.cases;\r\n\t\tif (index >= 7) totalCases3week += currentValue.cases;\r\n\t\ttotalCases4week += currentValue.cases;\r\n\r\n\t\t//add cases day by day\r\n\t\tconst detail: IHistory = {};\r\n\t\tdetail.count = currentValue.cases;\r\n\t\tdetail.date = currentValue.date;\r\n\t\tcasesDetail.push(detail);\r\n\t\treturn 0;\r\n\t});\r\n\r\n\t//Get nation deathes via API\r\n\tconst resDeaths = await fetchNationDeathsInfoByDays(days);\r\n\r\n\tlet totalDeaths1week: number = 0;\r\n\tlet totalDeaths2week: number = 0;\r\n\tlet totalDeaths3week: number = 0;\r\n\tlet totalDeaths4week: number = 0;\r\n\r\n\t//calculate total of deaths for 1,2,3,4 weeks\r\n\tconst deathsDetail: IHistory[] = [];\r\n\tresDeaths.data.data.map((currentValue: INation, index: number) => {\r\n\t\tif (index >= 21) totalDeaths1week += currentValue.deaths;\r\n\t\tif (index >= 14) totalDeaths2week += currentValue.deaths;\r\n\t\tif (index >= 7) totalDeaths3week += currentValue.deaths;\r\n\t\ttotalDeaths4week += currentValue.deaths;\r\n\r\n\t\t//add deaths day by day\r\n\t\tconst detail: IHistory = {};\r\n\t\tdetail.count = currentValue.deaths;\r\n\t\tdetail.date = currentValue.date;\r\n\t\tdeathsDetail.push(detail);\r\n\t\treturn 0;\r\n\t});\r\n\r\n\t//Get nation recovered via API\r\n\tconst resRecovered = await fetchNationRecoverdInfoByDays(days);\r\n\tlet totalRecovered1week: number = 0;\r\n\tlet totalRecovered2week: number = 0;\r\n\tlet totalRecovered3week: number = 0;\r\n\tlet totalRecovered4week: number = 0;\r\n\r\n\t//calculate total of recovered for 1,2,3,4 weeks\r\n\tconst recoveredDetail: IHistory[] = [];\r\n\tresRecovered.data.data.map((currentValue: INation, index: number) => {\r\n\t\tif (index >= 21) totalRecovered1week += currentValue.recovered;\r\n\t\tif (index >= 14) totalRecovered2week += currentValue.recovered;\r\n\t\tif (index >= 7) totalRecovered3week += currentValue.recovered;\r\n\t\ttotalRecovered4week += currentValue.recovered;\r\n\r\n\t\t//add recovered day by day\r\n\t\tconst detail: IHistory = {};\r\n\t\tdetail.count = currentValue.recovered;\r\n\t\tdetail.date = currentValue.date;\r\n\t\trecoveredDetail.push(detail);\r\n\t\treturn 0;\r\n\t});\r\n\r\n\t//add created objects to a single object\r\n\tconst result = {\r\n\t\tcases1w: totalCases1week,\r\n\t\tcases2w: totalCases2week,\r\n\t\tcases3w: totalCases3week,\r\n\t\tcases4w: totalCases4week,\r\n\t\tdeaths1w: totalDeaths1week,\r\n\t\tdeaths2w: totalDeaths2week,\r\n\t\tdeaths3w: totalDeaths3week,\r\n\t\tdeaths4w: totalDeaths4week,\r\n\t\trecovered1w: totalRecovered1week,\r\n\t\trecovered2w: totalRecovered2week,\r\n\t\trecovered3w: totalRecovered3week,\r\n\t\trecovered4w: totalRecovered4week,\r\n\t\tcases: 0,\r\n\t\tdeaths: 0,\r\n\t\trecovered: 0,\r\n\t\tdetailCases: casesDetail,\r\n\t\tdetailDeaths: deathsDetail,\r\n\t\tdetailRecovered: recoveredDetail,\r\n\t};\r\n\r\n\treturn result;\r\n};\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Cards from './components/Cards';\nimport Chart from './components/Chart';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Statusbar from './components/Statusbar';\nimport { getNationByDays } from './redux/actions/nation.action';\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t//Fetch 4 weeks ago nation info\n\t\tdispatch(getNationByDays(28));\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n\t\t\t\t\t\t<Statusbar />\n\t\t\t\t\t\t<Cards />\n\t\t\t\t\t\t<Chart />\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport { ToastContainer, Flip } from 'react-toastify';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t\t<ToastContainer\n\t\t\t\tposition=\"bottom-left\"\n\t\t\t\tautoClose={3000}\n\t\t\t\thideProgressBar={true}\n\t\t\t\ttransition={Flip}\n\t\t\t/>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}